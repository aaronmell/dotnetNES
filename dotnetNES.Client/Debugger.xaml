<Window x:Class="dotnetNES.Client.Debugger"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"
        xmlns:command="http://www.galasoft.ch/mvvmlight"
        Title="Debugger" Height="600" Width="720" 
        DataContext="{Binding Debugger, Source={StaticResource Locator}}"
        Background="LightGray">
    <i:Interaction.Triggers>
        <i:EventTrigger EventName="Closing">
            <command:EventToCommand Command="{Binding WindowClosingCommand}" PassEventArgsToCommand="True" />
        </i:EventTrigger>
        <i:EventTrigger EventName="Loaded">
            <command:EventToCommand Command="{Binding WindowOpeningCommand}" PassEventArgsToCommand="True" />
        </i:EventTrigger>
    </i:Interaction.Triggers>

    <Window.InputBindings>
        <KeyBinding Command="{Binding Path=ContinueCommand}" Key="F5" />
        <KeyBinding Command="{Binding Path=BreakCommand}" Key="End" Modifiers="Ctrl" />
        <KeyBinding Command="{Binding Path=StepCommand}" Key="F11" />

        <KeyBinding Command="{Binding Path=RunOneScanlineCommand}" Key="F6" />
        <KeyBinding Command="{Binding Path=RunOneFrameCommand}" Key="F7" />

    </Window.InputBindings>

    <Window.Resources>
        <Style x:Key="ColumnHeaderStyle" TargetType="{x:Type DataGridColumnHeader}">
            <Setter Property="FontSize" Value="12"/>
        </Style>

        <Style x:Key="CellStyle" TargetType="{x:Type DataGridCell}">
            <Setter Property="FontSize" Value="12"/>
            <Setter Property="MinHeight" Value="20"/>
        </Style>
        <Style x:Key="TextBlockLabelStyle" TargetType="{x:Type TextBlock}">
            <Setter Property="FontSize" Value="14"/>
            <Setter Property="Margin" Value="0,0,5,0"/>
            <Setter Property="VerticalAlignment" Value="Stretch" />
        </Style>
        <Style x:Key="TextBlockValueStyle" TargetType="{x:Type TextBlock}">            
            <Setter Property="FontSize" Value="14"/>
            <Setter Property="VerticalAlignment" Value="Center" />
            <Setter Property="Padding" Value="5,0,5,0" />
            <Setter Property="Background" Value="White" />
            <Setter Property="HorizontalAlignment" Value="Left" />
        </Style>
        <Style x:Key="TextBlockValueBorderStyle" TargetType="{x:Type Border}">
            <Setter Property="Margin" Value="0,0,5,0" />
            <Setter Property="BorderThickness" Value="1" />
            <Setter Property="BorderBrush" Value="Black" />
            <Setter Property="Height" Value="Auto" />
            <Setter Property="Width" Value="Auto" />
            <Setter Property="VerticalAlignment" Value="Center" />
        </Style>
        <Style x:Key="GroupBoxStyle" TargetType="{x:Type GroupBox}">
            <Setter Property="Margin" Value="10,25,0,0" />
            <Setter Property="BorderThickness" Value="1" />
            <Setter Property="BorderBrush" Value="Black" />
            <Setter Property="Padding" Value="10" />
            <Setter Property="Height" Value="Auto" />
            <Setter Property="HorizontalAlignment" Value="Stretch" />
        </Style>
        <Style x:Key="CheckBoxStyle" TargetType="{x:Type CheckBox}">
            <Setter Property="FontSize" Value="14"/>
            <Setter Property="Margin" Value="0,0,15,0"/>
            <Setter Property="VerticalAlignment" Value="Center"/>
        </Style>
    </Window.Resources>
    <Grid>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="130"/>
            <ColumnDefinition/>
        </Grid.ColumnDefinitions>
        <Grid.RowDefinitions>
            <RowDefinition />           
        </Grid.RowDefinitions>

        <Menu HorizontalAlignment="Left" Height="20" Margin="10,0,0,0" VerticalAlignment="Top" Width="{Binding ElementName=MainGrid, Path=ActualWidth}" Grid.Column="0" Grid.Row="0" >
            <MenuItem Header="Debug">
                <MenuItem Header="Continue" Command="{Binding Path=ContinueCommand}" InputGestureText="F5"></MenuItem>
                <MenuItem Header="Break" Command="{Binding Path=BreakCommand}" InputGestureText="CTRL+End"></MenuItem>
                <MenuItem Header="Step" Command="{Binding Path=StepCommand}" InputGestureText="F11"></MenuItem>
                <Separator />
                <MenuItem Header="Run One Scanline" Command="{Binding Path=RunOneScanlineCommand}" InputGestureText="F6"></MenuItem>
                <MenuItem Header="Run One Frame" Command="{Binding Path=RunOneFrameCommand}" InputGestureText="F7"></MenuItem>
            </MenuItem>
        </Menu>
        <DataGrid Height="500" HorizontalAlignment="Left" Margin="10,25,0,0" Name="OutputLog" VerticalAlignment="Top" MaxWidth="500" Width="Auto" AutoGenerateColumns="False" 
					CanUserReorderColumns="False" CanUserResizeRows="False" CanUserSortColumns="False" CanUserResizeColumns="False" CanUserDeleteRows="False"
					CanUserAddRows="False" ItemsSource="{Binding Disassembly}" CellStyle="{StaticResource CellStyle}" GridLinesVisibility="Horizontal" Grid.Column="0" Grid.Row="0" Grid.RowSpan="2">
            <DataGrid.Columns>
                <DataGridTextColumn Header="Addr" Width="Auto" MinWidth="40" CanUserResize="False" IsReadOnly="True" Binding="{Binding Key, Mode=OneWay}" HeaderStyle="{StaticResource ColumnHeaderStyle}" />
                <DataGridTextColumn Header="Instruction" Width="Auto" MinWidth="40" CanUserResize="False" IsReadOnly="True" Binding="{Binding Value.FormattedOpCode, Mode=OneWay}" HeaderStyle="{StaticResource ColumnHeaderStyle}" />
            </DataGrid.Columns>
        </DataGrid>
        <StackPanel Grid.Column="1" Grid.Row="0">
            <GroupBox Header="CPU" VerticalAlignment="Top" Style="{StaticResource GroupBoxStyle}">
                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="47" />
                        <ColumnDefinition />
                    </Grid.ColumnDefinitions>
                    <Grid.RowDefinitions>
                        <RowDefinition />
                        <RowDefinition />
                        <RowDefinition />
                    </Grid.RowDefinitions>

                    <StackPanel Grid.Column="0" Grid.Row="0" Grid.ColumnSpan="2" Orientation="Horizontal">
                        <TextBlock  Style="{StaticResource TextBlockLabelStyle}">A:</TextBlock>
                        <Border Style="{StaticResource TextBlockValueBorderStyle}">
                            <TextBlock Style="{StaticResource TextBlockValueStyle}" Text="{Binding Path=CPUFlags.Accumulator, Mode=OneWay }" />
                        </Border>

                        <TextBlock Style="{StaticResource TextBlockLabelStyle}">X:</TextBlock>
                        <Border Style="{StaticResource TextBlockValueBorderStyle}">
                            <TextBlock Style="{StaticResource TextBlockValueStyle}" Text="{Binding Path=CPUFlags.XRegister, Mode=OneWay }" />
                        </Border>

                        <TextBlock Style="{StaticResource TextBlockLabelStyle}">Y:</TextBlock>
                        <Border Style="{StaticResource TextBlockValueBorderStyle}">
                            <TextBlock Style="{StaticResource TextBlockValueStyle}" Text="{Binding Path=CPUFlags.YRegister, Mode=OneWay }" />
                        </Border>

                        <TextBlock Grid.Column="0" Grid.Row="0" Style="{StaticResource TextBlockLabelStyle}">PC:</TextBlock>
                        <Border Style="{StaticResource TextBlockValueBorderStyle}">
                            <TextBlock Style="{StaticResource TextBlockValueStyle}" Text="{Binding Path=CPUFlags.ProgramCounter, Mode=OneWay }" />
                        </Border>
                        <TextBlock Style="{StaticResource TextBlockLabelStyle}">Cycle:</TextBlock>
                        <Border Style="{StaticResource TextBlockValueBorderStyle}">
                            <TextBlock Style="{StaticResource TextBlockValueStyle}" Text="{Binding Path=CPUFlags.CycleCount, Mode=OneWay }" />
                        </Border>
                        <TextBlock Style="{StaticResource TextBlockLabelStyle}">SP:</TextBlock>
                        <Border Style="{StaticResource TextBlockValueBorderStyle}">
                            <TextBlock Style="{StaticResource TextBlockValueStyle}" Text="{Binding Path=CPUFlags.StackPointer, Mode=OneWay }" />
                        </Border>
                    </StackPanel>

                    <StackPanel Grid.Column="0" Grid.Row="1" Grid.RowSpan="2" Orientation="Horizontal" Margin="0,10,0,0" VerticalAlignment="Center">
                        <TextBlock Style="{StaticResource TextBlockLabelStyle}">P:</TextBlock>
                        <Border Style="{StaticResource TextBlockValueBorderStyle}">
                            <TextBlock Style="{StaticResource TextBlockValueStyle}" Text="{Binding Path=CPUFlags.FlagsRegister, Mode=OneWay }" />
                        </Border>
                    </StackPanel>

                    <StackPanel Grid.Column="1" Grid.Row="1" Orientation="Horizontal" Margin="10,10,0,0">
                        <CheckBox  Style="{StaticResource CheckBoxStyle}" IsChecked="{Binding Path=CPUFlags.CarryFlag}" Margin="0,0,17,0" >Carry</CheckBox>
                        <CheckBox  Style="{StaticResource CheckBoxStyle}" IsChecked="{Binding Path=CPUFlags.ZeroFlag}" Margin="0,0,34,0" >Zero</CheckBox>
                        <CheckBox  Style="{StaticResource CheckBoxStyle}" IsChecked="{Binding Path=CPUFlags.DisableInterruptFlag}" Margin="0,0,17,0">Interrupt</CheckBox>
                        <CheckBox  Style="{StaticResource CheckBoxStyle}" IsChecked="{Binding Path=CPUFlags.DecimalFlag}">Decimal</CheckBox>
                    </StackPanel>

                    <StackPanel Grid.Column="1" Grid.Row="2" Orientation="Horizontal" Margin="10,0,0,0">
                        <CheckBox  Style="{StaticResource CheckBoxStyle}" IsChecked="False" > Break</CheckBox>
                        <CheckBox  Style="{StaticResource CheckBoxStyle}" IsChecked="True">Unused</CheckBox>
                        <CheckBox  Style="{StaticResource CheckBoxStyle}" IsChecked="{Binding Path=CPUFlags.OverflowFlag}" >Overflow</CheckBox>
                        <CheckBox  Style="{StaticResource CheckBoxStyle}" IsChecked="{Binding Path=CPUFlags.NegativeFlag}" >Negative</CheckBox>
                    </StackPanel>                 
                </Grid>
            </GroupBox>
            <GroupBox Header="PPU" Grid.Row="0" Grid.Column="1" VerticalAlignment="Top" Style="{StaticResource GroupBoxStyle}" Margin="10,5,0,0">
                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition />                       
                    </Grid.ColumnDefinitions>
                    <Grid.RowDefinitions>
                        <RowDefinition />
                        <RowDefinition />
                    </Grid.RowDefinitions>

                    <StackPanel Grid.Column="0" Grid.Row="0" Orientation="Horizontal">
                        <TextBlock  Style="{StaticResource TextBlockLabelStyle}">Cycle:</TextBlock>
                        <Border Style="{StaticResource TextBlockValueBorderStyle}">
                            <TextBlock Style="{StaticResource TextBlockValueStyle}" Text="{Binding Path=PPUFlags.Cycle, Mode=OneWay }" />
                        </Border>
                        <TextBlock  Style="{StaticResource TextBlockLabelStyle}">Scanline:</TextBlock>
                        <Border Style="{StaticResource TextBlockValueBorderStyle}">
                            <TextBlock Style="{StaticResource TextBlockValueStyle}" Text="{Binding Path=PPUFlags.ScanLine, Mode=OneWay }" />
                        </Border>
                        <TextBlock  Style="{StaticResource TextBlockLabelStyle}">VRAM Addr:</TextBlock>
                        <Border Style="{StaticResource TextBlockValueBorderStyle}">
                            <TextBlock Style="{StaticResource TextBlockValueStyle}" Text="{Binding Path=PPUFlags.VRAMAddress, Mode=OneWay }" />
                        </Border>
                        <TextBlock  Style="{StaticResource TextBlockLabelStyle}">NT Addr:</TextBlock>
                        <Border Style="{StaticResource TextBlockValueBorderStyle}">
                            <TextBlock Style="{StaticResource TextBlockValueStyle}" Text="{Binding Path=PPUFlags.NTAddress, Mode=OneWay }" />
                        </Border>
                        <TextBlock  Style="{StaticResource TextBlockLabelStyle}">X Scroll:</TextBlock>
                        <Border Style="{StaticResource TextBlockValueBorderStyle}">
                            <TextBlock Style="{StaticResource TextBlockValueStyle}" Text="{Binding Path=PPUFlags.XScroll, Mode=OneWay }" />
                        </Border>
                    </StackPanel>
                    <StackPanel Orientation="Horizontal" Grid.Column="0" Grid.Row="1" Margin="0,10,0,0">
                        <GroupBox  Header="Ctrl" VerticalAlignment="Top" Style="{StaticResource GroupBoxStyle}" Margin="0,0,0,0" Height="{Binding RelativeSource={RelativeSource FindAncestor, 
                            AncestorType={x:Type StackPanel}}, Path=ActualHeight}">
                            <StackPanel Orientation="Vertical" HorizontalAlignment="Left">
                                <StackPanel Orientation="Horizontal" HorizontalAlignment="Left" Margin="0,0,0,4">                                    
                                    <Border Style="{StaticResource TextBlockValueBorderStyle}">
                                        <TextBlock Style="{StaticResource TextBlockValueStyle}" Text="{Binding Path=PPUFlags.BaseNameTable, Mode=OneWay }" />
                                    </Border>
                                    <TextBlock  Style="{StaticResource TextBlockLabelStyle}">Base Nametable</TextBlock>
                                </StackPanel>
                                <CheckBox  Style="{StaticResource CheckBoxStyle}" IsChecked="{Binding Path=PPUFlags.VRAMIncrement, Mode=OneWay }" >Vram Increment</CheckBox>
                                <CheckBox  Style="{StaticResource CheckBoxStyle}" IsChecked="{Binding Path=PPUFlags.SpriteTableAddress, Mode=OneWay }" >Sprite Table Addr</CheckBox>
                                <CheckBox  Style="{StaticResource CheckBoxStyle}" IsChecked="{Binding Path=PPUFlags.BackgroundTableAddress, Mode=OneWay }" >BG Table Addr</CheckBox>
                                <CheckBox  Style="{StaticResource CheckBoxStyle}" IsChecked="{Binding Path=PPUFlags.SpriteSize, Mode=OneWay }" >SpriteSize</CheckBox>
                                <CheckBox  Style="{StaticResource CheckBoxStyle}" IsChecked="{Binding Path=PPUFlags.PPUMasterSelect, Mode=OneWay }" >PPU Master Select</CheckBox>
                                <CheckBox  Style="{StaticResource CheckBoxStyle}" IsChecked="{Binding Path=PPUFlags.GenerateNMI, Mode=OneWay }" >Generate NMI</CheckBox>
                            </StackPanel>
                        </GroupBox>
                        <GroupBox  Header="Mask" VerticalAlignment="Top" Style="{StaticResource GroupBoxStyle}" Margin="3,0,0,0" Height="{Binding RelativeSource={RelativeSource FindAncestor, 
                            AncestorType={x:Type StackPanel}}, Path=ActualHeight}">
                                <StackPanel Orientation="Vertical" HorizontalAlignment="Left">
                                    <CheckBox  Style="{StaticResource CheckBoxStyle}" IsChecked="{Binding Path=PPUFlags.GrayScale, Mode=OneWay }" >GrayScale</CheckBox>
                                    <CheckBox  Style="{StaticResource CheckBoxStyle}" IsChecked="{Binding Path=PPUFlags.DrawLeftBackground, Mode=OneWay }" >Draw Left BG</CheckBox>
                                    <CheckBox  Style="{StaticResource CheckBoxStyle}" IsChecked="{Binding Path=PPUFlags.DrawLeftSprites, Mode=OneWay }" >Draw Left Sprites</CheckBox>
                                    <CheckBox  Style="{StaticResource CheckBoxStyle}" IsChecked="{Binding Path=PPUFlags.DrawBackGround, Mode=OneWay }" >BG Enabled</CheckBox>
                                    <CheckBox  Style="{StaticResource CheckBoxStyle}" IsChecked="{Binding Path=PPUFlags.DrawSprites, Mode=OneWay }" >Sprites Enabled</CheckBox>
                                    <CheckBox  Style="{StaticResource CheckBoxStyle}" IsChecked="{Binding Path=PPUFlags.IntensifyRed, Mode=OneWay }" >Intensify Red</CheckBox>
                                    <CheckBox  Style="{StaticResource CheckBoxStyle}" IsChecked="{Binding Path=PPUFlags.IntensifyBlue, Mode=OneWay }" >Intensify Blue</CheckBox>
                                    <CheckBox  Style="{StaticResource CheckBoxStyle}" IsChecked="{Binding Path=PPUFlags.IntensifyGreen, Mode=OneWay }" >Intensify Green</CheckBox>
                                </StackPanel>
                            </GroupBox>
                        <GroupBox  Header="Status" VerticalAlignment="Top" Style="{StaticResource GroupBoxStyle}" Margin="3,0,0,0" Height="{Binding RelativeSource={RelativeSource FindAncestor, 
                            AncestorType={x:Type StackPanel}}, Path=ActualHeight}">
                            <StackPanel Orientation="Vertical" HorizontalAlignment="Left">
                                <CheckBox  Style="{StaticResource CheckBoxStyle}" IsChecked="{Binding Path=PPUFlags.SpriteOverflow, Mode=OneWay }" >Sprite Overflow</CheckBox>
                                <CheckBox  Style="{StaticResource CheckBoxStyle}" IsChecked="{Binding Path=PPUFlags.SpriteZeroHit, Mode=OneWay }" >Sprite 0 Hit</CheckBox>
                                <CheckBox  Style="{StaticResource CheckBoxStyle}" IsChecked="{Binding Path=PPUFlags.VblankEnabled, Mode=OneWay }" >VBlank Enabled</CheckBox>                                
                            </StackPanel>
                        </GroupBox>
                    </StackPanel>  
                </Grid>
            </GroupBox>
        </StackPanel>
        
    </Grid>
</Window>
